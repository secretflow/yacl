# Copyright 2021 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//bazel:yacl.bzl", "yacl_cc_binary", "yacl_cc_library", "yacl_cc_test")

package(default_visibility = ["//visibility:public"])

yacl_cc_library(
    name = "prg",
    srcs = ["prg.cc"],
    hdrs = ["prg.h"],
    deps = [
        "//yacl/base:dynamic_bitset",
        "//yacl/crypto/base:symmetric_crypto",
        "//yacl/crypto/base/drbg:nist_aes_drbg",
        "//yacl/crypto/base/drbg:sm4_drbg",
    ],
)

yacl_cc_binary(
    name = "prg_bench",
    srcs = ["prg_bench.cc"],
    deps = [
        ":prg",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_test(
    name = "prg_test",
    srcs = ["prg_test.cc"],
    deps = [
        ":prg",
    ],
)

yacl_cc_library(
    name = "random_oracle",
    hdrs = ["random_oracle.h"],
    deps = [
        "//yacl/crypto/base/hash:hash_utils",
    ],
)

yacl_cc_test(
    name = "random_oracle_test",
    srcs = ["random_oracle_test.cc"],
    deps = [
        ":random_oracle",
        "//yacl/crypto/utils:rand",
    ],
)

yacl_cc_binary(
    name = "random_oracle_bench",
    srcs = ["random_oracle_bench.cc"],
    deps = [
        ":random_oracle",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_library(
    name = "random_permutation",
    srcs = ["random_permutation.cc"],
    hdrs = ["random_permutation.h"],
    deps = [
        "//yacl/crypto/base:symmetric_crypto",
        "//yacl/crypto/base/aes:aes_intrinsics",
    ],
)

yacl_cc_test(
    name = "random_permutation_test",
    srcs = ["random_permutation_test.cc"],
    deps = [
        ":prg",
        ":random_permutation",
    ],
)

yacl_cc_binary(
    name = "random_permutation_bench",
    srcs = ["random_permutation_bench.cc"],
    deps = [
        ":random_permutation",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_library(
    name = "linear_code",
    hdrs = ["linear_code.h"],
    deps = [
        "//yacl/crypto/tools:random_permutation",
        "//yacl/utils:thread_pool",
    ] + select({
        "@platforms//cpu:aarch64": [
            "@com_github_dltcollab_sse2neon//:sse2neon",
        ],
        "//conditions:default": [],
    }),
)

yacl_cc_test(
    name = "linear_code_test",
    srcs = ["linear_code_test.cc"],
    deps = [
        ":linear_code",
        "//yacl/crypto/utils:rand",
    ],
)
