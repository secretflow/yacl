# Copyright 2021 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//bazel:yacl.bzl", "yacl_cc_binary", "yacl_cc_library", "yacl_cc_test")

package(default_visibility = ["//visibility:public"])

yacl_cc_library(
    name = "code_interface",
    hdrs = ["code_interface.h"],
)

yacl_cc_library(
    name = "linear_code",
    hdrs = ["linear_code.h"],
    deps = [
        ":code_interface",
        "//yacl/crypto/tools:rp",
        "//yacl/math:gadget",
        "//yacl/utils:thread_pool",
    ] + select({
        "@platforms//cpu:aarch64": [
            "@com_github_dltcollab_sse2neon//:sse2neon",
        ],
        "//conditions:default": [],
    }),
)

yacl_cc_test(
    name = "linear_code_test",
    srcs = ["linear_code_test.cc"],
    deps = [
        ":linear_code",
        "//yacl/crypto/rand",
    ],
)

yacl_cc_library(
    name = "silver_code",
    srcs = ["silver_code.cc"],
    hdrs = ["silver_code.h"],
    deps = [
        ":code_interface",
        "//yacl/base:block",
        "//yacl/base:int128",
        "//yacl/utils:thread_pool",
    ] + select({
        "@platforms//cpu:aarch64": [
            "@com_github_dltcollab_sse2neon//:sse2neon",
        ],
        "//conditions:default": [],
    }),
)

yacl_cc_test(
    name = "silver_code_test",
    srcs = ["silver_code_test.cc"],
    deps = [
        ":silver_code",
        "//yacl/crypto/rand",
    ],
)

yacl_cc_library(
    name = "ea_code",
    hdrs = ["ea_code.h"],
    deps = [
        ":code_interface",
        ":linear_code",
        "//yacl/base:block",
        "//yacl/base:int128",
        "//yacl/utils:thread_pool",
    ] + select({
        "@platforms//cpu:aarch64": [
            "@com_github_dltcollab_sse2neon//:sse2neon",
        ],
        "//conditions:default": [],
    }),
)

yacl_cc_test(
    name = "ea_code_test",
    srcs = ["ea_code_test.cc"],
    deps = [
        ":ea_code",
        "//yacl/crypto/rand",
    ],
)

yacl_cc_binary(
    name = "benchmark",
    srcs = [
        "benchmark.cc",
        "benchmark.h",
    ],
    deps = [
        ":ea_code",
        ":linear_code",
        ":silver_code",
        "//yacl/base:aligned_vector",
        "//yacl/crypto/rand",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)
